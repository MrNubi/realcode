{"version":3,"file":"418.js","mappings":"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","sources":["webpack://sleact-ts-front/./components/DMList/styles.tsx","webpack://sleact-ts-front/./components/InviteChannelModal/index.tsx","webpack://sleact-ts-front/./components/Modal/styles.tsx","webpack://sleact-ts-front/./components/Modal/index.tsx","webpack://sleact-ts-front/./hooks/useInput.tsx","webpack://sleact-ts-front/./components/Menu/styles.tsx","webpack://sleact-ts-front/./components/Menu/index.tsx","webpack://sleact-ts-front/./layouts/Workspace/styles.tsx","webpack://sleact-ts-front/./components/CreateChannelModal/index.tsx","webpack://sleact-ts-front/./components/InviteWorkspaceModal/index.tsx","webpack://sleact-ts-front/./components/ChannalList/index.tsx","webpack://sleact-ts-front/./hooks/useSocket.ts","webpack://sleact-ts-front/./components/DMList/inex.tsx","webpack://sleact-ts-front/./layouts/Workspace/index.tsx","webpack://sleact-ts-front/./pages/MemoLogin/styles.tsx","webpack://sleact-ts-front/./utills/fetcher.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\r\n  background: transparent;\r\n  border: none;\r\n  width: 26px;\r\n  height: 26px;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  ${({ collapse }) =>\r\n    collapse &&\r\n    `\r\n    & i {\r\n      transform: none;\r\n    }\r\n  `};\r\n`;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/MemoLogin/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport axios from 'axios';\r\nimport React, { useCallback, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport fetcher from '../../utills/fetcher';\r\nimport useSWR, { mutate } from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowInviteChannelModal: (flag: boolean) => void;\r\n}\r\n\r\nconst InviteChannelModal: VFC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\r\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n\r\n  const { data: UserData } = useSWR<IUser>('/api/users', fetcher, {});\r\n\r\n  const { data: memberData, mutate: memberMutate } = useSWR<IUser[]>(\r\n    UserData && channel ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onInviteMember = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newMember || !newMember.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\r\n          email: newMember,\r\n        })\r\n        .then((r) => {\r\n          memberMutate(r.data, false);\r\n          setShowInviteChannelModal(false);\r\n          setNewMember('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newMember],\r\n  );\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteMember}>\r\n        <Label id=\"member-label\">\r\n          <span>이메일</span>\r\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember}></Input>\r\n        </Label>\r\n\r\n        <Button type=\"submit\">초대하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteChannelModal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CreateModal = styled.div`\r\n  position: fixed;\r\n  text-align: center;\r\n  left: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: 1022;\r\n  & > div {\r\n    margin-top: 200px;\r\n    display: inline-block;\r\n    width: 440px;\r\n    background: white;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    max-width: 440px;\r\n    padding: 30px 40px 0;\r\n    z-index: 1012;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import { CloseModalButton, CreateModal } from './styles';\r\nimport React, { FC, useCallback } from 'react';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n}\r\nconst Modal: FC<Props> = ({ show, children, onCloseModal }) => {\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  return (\r\n    <CreateModal onClick={onCloseModal}>\r\n      <div onClick={stopPropagation}>\r\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\r\n        {children}\r\n      </div>\r\n    </CreateModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { Dispatch, SetStateAction, useCallback, useState, ChangeEvent } from 'react';\r\n\r\ntype ReturnTypes<T> = [T, (e: ChangeEvent<HTMLInputElement>) => void, Dispatch<SetStateAction<T>>];\r\n\r\nconst useInput = <T,>(initialData: T): ReturnTypes<T> => {\r\n  const [value, setValue] = useState(initialData);\r\n  const handler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value as unknown as T);\r\n  }, []);\r\n  return [value, handler, setValue];\r\n};\r\n\r\nexport default useInput;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CreateMenu = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  & > div {\r\n    position: absolute;\r\n    display: inline-block;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    min-width: 360px;\r\n    z-index: 512;\r\n    max-height: calc(100vh - 20px);\r\n    color: rgb(29, 28, 29);\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import React, { CSSProperties, FC, useCallback } from 'react';\r\nimport { CloseModalButton, CreateMenu } from './styles';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: (e: any) => void;\r\n  style: CSSProperties;\r\n  closeButton?: boolean;\r\n}\r\nconst Menu: FC<Props> = ({ children, style, show, onCloseModal, closeButton }) => {\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <CreateMenu onClick={onCloseModal}>\r\n      <div style={style} onClick={stopPropagation}>\r\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\r\n        {children}\r\n      </div>\r\n    </CreateMenu>\r\n  );\r\n};\r\nMenu.defaultProps = {\r\n  closeButton: true,\r\n};\r\n\r\nexport default Menu;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const RightMenu = styled.div`\r\n  float: right;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 38px;\r\n  background: #350d36;\r\n  color: #ffffff;\r\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\r\n  padding: 5px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ProfileImg = styled.img`\r\n  width: 28px;\r\n  height: 28px;\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 16px;\r\n`;\r\n\r\nexport const ProfileModal = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  & img {\r\n    display: flex;\r\n  }\r\n  & > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 10px;\r\n  }\r\n  & #profile-name {\r\n    font-weight: bold;\r\n    display: inline-flex;\r\n  }\r\n  & #profile-active {\r\n    font-size: 13px;\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nexport const LogOutButton = styled.button`\r\n  border: none;\r\n  width: 100%;\r\n  border-top: 1px solid rgb(29, 28, 29);\r\n  background: transparent;\r\n  display: block;\r\n  height: 33px;\r\n  padding: 5px 20px 5px;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Workspaces = styled.div`\r\n  width: 65px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #3f0e40;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-right: 1px solid rgb(82, 38, 83);\r\n  vertical-align: top;\r\n  text-align: center;\r\n  padding: 15px 0 0;\r\n`;\r\n\r\nexport const Channels = styled.nav`\r\n  width: 260px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  background: #3f0e40;\r\n  color: rgb(188, 171, 188);\r\n  vertical-align: top;\r\n  & a {\r\n    padding-left: 36px;\r\n    color: inherit;\r\n    text-decoration: none;\r\n    height: 28px;\r\n    line-height: 28px;\r\n    display: flex;\r\n    align-items: center;\r\n    &.selected {\r\n      color: white;\r\n    }\r\n  }\r\n  & .bold {\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n  & .count {\r\n    margin-left: auto;\r\n    background: #cd2553;\r\n    border-radius: 16px;\r\n    display: inline-block;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    height: 18px;\r\n    line-height: 18px;\r\n    padding: 0 9px;\r\n    color: white;\r\n    margin-right: 16px;\r\n  }\r\n  & h2 {\r\n    height: 36px;\r\n    line-height: 36px;\r\n    margin: 0;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const WorkspaceName = styled.button`\r\n  height: 64px;\r\n  line-height: 64px;\r\n  border: none;\r\n  width: 100%;\r\n  text-align: left;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-bottom: 1px solid rgb(82, 38, 83);\r\n  font-weight: 900;\r\n  font-size: 24px;\r\n  background: transparent;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  padding: 0;\r\n  padding-left: 16px;\r\n  margin: 0;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MenuScroll = styled.div`\r\n  height: calc(100vh - 102px);\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const WorkspaceModal = styled.div`\r\n  padding: 10px 0 0;\r\n  & h2 {\r\n    padding-left: 20px;\r\n  }\r\n  & > button {\r\n    width: 100%;\r\n    height: 28px;\r\n    padding: 4px;\r\n    border: none;\r\n    background: transparent;\r\n    border-top: 1px solid rgb(28, 29, 28);\r\n    cursor: pointer;\r\n    &:last-of-type {\r\n      border-bottom: 1px solid rgb(28, 29, 28);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Chats = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const AddButton = styled.button`\r\n  color: white;\r\n  font-size: 24px;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceButton = styled.button`\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  background: white;\r\n  border: 3px solid #3f0e40;\r\n  margin-bottom: 15px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: black;\r\n  cursor: pointer;\r\n`;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/MemoLogin/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport axios from 'axios';\r\nimport React, { useCallback, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport fetcher from '../../utills/fetcher';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowCreateChannelModal: (flag: boolean) => void;\r\n}\r\n\r\nconst CreateChannelModal: VFC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\r\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\r\n  const [newUrl, onChangeNewUrl] = useInput('');\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n\r\n  const {\r\n    data: UserData,\r\n    error,\r\n    mutate: UserMutate,\r\n  } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n\r\n  const { data: channelData, mutate: channelMutate } = useSWR<IChannel[]>(\r\n    UserData ? `/api/workspaces/${workspace}/channels` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onCreateChannel = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      axios\r\n        .post(\r\n          `/api/workspaces/${workspace}/channels`,\r\n          {\r\n            name: newChannel,\r\n          },\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        )\r\n        .then((response) => {\r\n          console.log('create channel: ', response.data);\r\n          channelMutate();\r\n          setShowCreateChannelModal(false);\r\n          setNewChannel('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir('e :', error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newChannel],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onCreateChannel}>\r\n        <Label id=\"channel-label\">\r\n          <span>채널</span>\r\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel}></Input>\r\n        </Label>\r\n\r\n        <Button type=\"submit\">생성하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateChannelModal;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/MemoLogin/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport axios from 'axios';\r\nimport React, { useCallback, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport fetcher from '../../utills/fetcher';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\r\n}\r\n\r\nconst InviteWorkspaceModal: VFC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\r\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\r\n  const [newUrl, onChangeNewUrl] = useInput('');\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n\r\n  const { data: UserData } = useSWR<IUser>('/api/users', fetcher, {});\r\n\r\n  const { data: memberData, mutate: memberMutate } = useSWR<IChannel[]>(\r\n    UserData ? `/api/workspaces/${workspace}/members` : null,\r\n\r\n    fetcher,\r\n  );\r\n\r\n  const onInviteMember = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newMember || !newMember.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/members`, {\r\n          email: newMember,\r\n        })\r\n        .then((response) => {\r\n          memberMutate(response.data, false);\r\n          setShowInviteWorkspaceModal(false);\r\n          setNewMember('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [workspace, newMember],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteMember}>\r\n        <Label id=\"member-label\">\r\n          <span>이메일</span>\r\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember}></Input>\r\n        </Label>\r\n\r\n        <Button type=\"submit\">초대하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteWorkspaceModal;\r\n","// import useSocket from '@hooks/useSocket';\r\nimport { CollapseButton } from '../DMList/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '../../utills/fetcher';\r\nimport React, { FC, useCallback, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\nconst ChannelList: FC = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  // const [socket] = useSocket(workspace);\r\n  const {\r\n    data: userData,\r\n    error,\r\n    mutate,\r\n  } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Channels</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          channelData?.map((channel) => {\r\n            return (\r\n              <NavLink\r\n                key={channel.name}\r\n                activeClassName=\"selected\"\r\n                to={`/workspace/${workspace}/channel/${channel.name}`}\r\n              >\r\n                <span># {channel.name}</span>\r\n              </NavLink>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChannelList;\r\n","import io from 'socket.io-client';\r\nimport { useCallback } from 'react';\r\n\r\nconst backUrl = 'http://localhost:3095';\r\n\r\nconst sockets: { [key: string]: SocketIOClient.Socket } = {};\r\nconst useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\r\n  console.log('rerender', workspace);\r\n  const disconnect = useCallback(() => {\r\n    if (workspace) {\r\n      sockets[workspace].disconnect();\r\n      delete sockets[workspace];\r\n    }\r\n  }, [workspace]);\r\n  if (!workspace) {\r\n    return [undefined, disconnect];\r\n  }\r\n  if (!sockets[workspace]) {\r\n    sockets[workspace] = io.connect(`${backUrl}/ws-${workspace}`, {\r\n      transports: ['websocket'],\r\n    });\r\n  }\r\n\r\n  return [sockets[workspace], disconnect];\r\n};\r\n\r\nexport default useSocket;\r\n\r\n// import React, { useCallback } from 'react';\r\n// import { useParams } from 'react-router';\r\n// import io, { Socket } from 'socket.io-client';\r\n\r\n// const sockets: { [key: string]: SocketIOClient.Socket } = {};\r\n// const useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\r\n//   // socket.io 쓸거면 범위를 진짜 잘 조절해야됨\r\n\r\n//   const backUrl = 'http://localhost:3095/';\r\n//   sockets[workspace ? workspace : ''] = io.connect(`${backUrl}/ws-${workspace}`, {\r\n//     transports: ['websocket'],\r\n//   });\r\n//   const disconnect = useCallback(() => {\r\n//     if (workspace) {\r\n//       sockets[workspace].disconnect();\r\n//       delete sockets[workspace];\r\n//     }\r\n//   }, [workspace]);\r\n//   if (!workspace) {\r\n//     console.log('useSocket: workspace가 없습니다');\r\n//     return [undefined, disconnect];\r\n//   }\r\n\r\n//   sockets[workspace].emit('hello', 'world');\r\n//   // socket.emit('hello', 'world'); => 서버에 hello란 이벤트 이름으로 world라는 데이터를 보냄\r\n//   sockets[workspace].on('message', (data: any) => {\r\n//     console.log(data);\r\n//   });\r\n//   sockets[workspace].on('data', (data: any) => {\r\n//     console.log(data);\r\n//   });\r\n//   // socket.on('name', fn) => 서버에서 클라이언트로 보내는 데이터 중 name이 일치하는 값 받음, 그리고 콜백함수\r\n//   //이벤트명이 일치해야 받음\r\n\r\n//   // 맺은 연결을 끊는 함수\r\n\r\n//   return [sockets[workspace], disconnect];\r\n// };\r\n\r\n// export default useSocket;\r\n","// import useSocket from '@hooks/useSocket';\r\nimport { CollapseButton } from './styles';\r\n// import useSocket from '@hooks/useSocket';\r\nimport { IDM, IUser, IUserWithOnline } from '@typings/db';\r\nimport fetcher from '../../utills/fetcher';\r\nimport React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\nimport useSWRInfinite from 'react-swr-infinite-scroll';\r\nimport useSocket from '@hooks/useSocket';\r\n\r\nconst DMList: FC = () => {\r\n  const { workspace, id } = useParams<{ workspace?: string; id: string }>();\r\n  const {\r\n    data: userData,\r\n    error,\r\n    mutate,\r\n  } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n\r\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n  const [socket] = useSocket(workspace);\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n  const [onlineList, setOnlineList] = useState<number[]>([]);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('DMList: workspace 바꼈다', workspace);\r\n    setOnlineList([]);\r\n  }, [workspace]);\r\n\r\n  useEffect(() => {\r\n    socket?.on('onlineList', (data: number[]) => {\r\n      console.log(data);\r\n      setOnlineList(data);\r\n    });\r\n    // socket?.on('dm', onMessage);\r\n    // console.log('socket on dm', socket?.hasListeners('dm'), socket);\r\n    return () => {\r\n      // socket?.off('dm', onMessage);\r\n      // console.log('socket off dm', socket?.hasListeners('dm'));\r\n      socket?.off('onlineList');\r\n    };\r\n  }, [socket]);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Direct Messages</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          memberData?.map((member) => {\r\n            const isOnline = onlineList.includes(member.id);\r\n            return (\r\n              <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\r\n                <i\r\n                  className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\r\n                    isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\r\n                  }`}\r\n                  aria-hidden=\"true\"\r\n                  data-qa=\"presence_indicator\"\r\n                  data-qa-presence-self=\"false\"\r\n                  data-qa-presence-active=\"false\"\r\n                  data-qa-presence-dnd=\"false\"\r\n                />\r\n                <span>{member.nickname}</span>\r\n                {member.id === userData?.id && <span> (나)</span>}\r\n              </NavLink>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DMList;\r\n","import Menu from '../../components/Menu';\r\nimport loadable from '@loadable/component';\r\nimport axios from 'axios';\r\nimport React, { useCallback, useEffect, useState, VFC } from 'react';\r\nimport { Route, Switch, useParams } from 'react-router';\r\nimport useSWR from 'swr';\r\nimport fetcher from '../../utills/fetcher';\r\nimport {\r\n  AddButton,\r\n  Channels,\r\n  Chats,\r\n  Header,\r\n  LogOutButton,\r\n  MenuScroll,\r\n  ProfileImg,\r\n  ProfileModal,\r\n  RightMenu,\r\n  WorkspaceButton,\r\n  WorkspaceModal,\r\n  WorkspaceName,\r\n  Workspaces,\r\n  WorkspaceWrapper,\r\n} from '../Workspace/styles';\r\nimport { IChannel, IUser } from '../../typings/db';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from '@components/Modal';\r\nimport { Button, Input, Label } from '@pages/MemoLogin/styles';\r\nimport useInput from '@hooks/useInput';\r\nimport { toast } from 'react-toastify';\r\nimport CreateChannelModal from '../../components/CreateChannelModal';\r\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal';\r\nimport InviteChannelModal from '@components/InviteChannelModal';\r\nimport ChannelList from '@components/ChannalList';\r\nimport DMList from '@components/DMList/inex';\r\nimport useSocket from '@hooks/useSocket';\r\nimport leaf from '../Workspace/leaf.png';\r\n\r\nconst Channel = loadable(() => import('../../pages/Channel'));\r\nconst DirectMessage = loadable(() => import('../../pages/DirectMessage'));\r\n\r\nconst Workspace: VFC = () => {\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const {\r\n    data: UserData,\r\n    error,\r\n    mutate,\r\n  } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000,\r\n  });\r\n  const { data: channelData } = useSWR<IChannel[]>(UserData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n  const { data: memberData, mutate: memberMutate } = useSWR<IUser[]>(\r\n    UserData && channel ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\r\n    fetcher,\r\n    {\r\n      refreshInterval: 1000,\r\n    },\r\n  );\r\n\r\n  const [showUserMenu, setShowUserMenu] = useState(false);\r\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\r\n  const [showWorkspacesModal, setShowWorkspacesModal] = useState(false);\r\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\r\n  const [showCreateInviteWorkspace, setShowInviteWorkspace] = useState(false);\r\n  const [showCreateInviteChannel, setShowInviteChannel] = useState(false);\r\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkpsace] = useInput('');\r\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\r\n  const [socket, disconnect] = useSocket(workspace);\r\n\r\n  useEffect(() => {\r\n    if (channelData && UserData && socket) {\r\n      console.log('socket :', socket);\r\n      socket.emit('login', { id: UserData.id, channels: channelData.map((v) => v.id) });\r\n    }\r\n  }, [socket, channelData, UserData]);\r\n  useEffect(() => {\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, [workspace, disconnect]);\r\n  // useEffect는 가끔 함수 안에서 안쓰더라도, 옵저빙하는 값으로서 []안에 넣어 줄 필요가 있음\r\n\r\n  const onClickUserProfile = useCallback((e) => {\r\n    e.stopPropagation();\r\n    setShowUserMenu((prev) => !prev);\r\n  }, []);\r\n\r\n  const onClickCreateWorkspace = useCallback(() => {\r\n    setShowCreateWorkspaceModal(true);\r\n  }, []);\r\n\r\n  console.log('showUserMenu3 :', showUserMenu);\r\n\r\n  console.log('UserData LastCheck: ', UserData);\r\n\r\n  const onLogout = useCallback(() => {\r\n    axios\r\n      .post('http://localhost:3095/api/users/logout', null, {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        mutate(response.data, false);\r\n        console.log('onLogOut :', response.data);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data ? error.response.data : '애러 캐치 실패');\r\n      });\r\n  }, []);\r\n\r\n  const onCloseModal = useCallback(() => {\r\n    setShowCreateWorkspaceModal(false);\r\n    setShowCreateChannelModal(false);\r\n    setShowInviteWorkspace(false);\r\n    setShowInviteChannel(false);\r\n  }, []);\r\n\r\n  const onClickAddChannel = useCallback(() => {\r\n    setShowCreateChannelModal(true);\r\n  }, []);\r\n\r\n  const onClickInviteWorkspace = useCallback(() => {\r\n    setShowInviteWorkspace(true);\r\n  }, []);\r\n  const onClickInviteChannel = useCallback(() => {\r\n    setShowInviteChannel(true);\r\n  }, []);\r\n\r\n  const toggleWorkspaceModal = useCallback(() => {\r\n    setShowWorkspacesModal((prev) => !prev);\r\n  }, []);\r\n\r\n  const leafUrl =\r\n    'https://raw.githubusercontent.com/MrNubi/realcode/master/img/leaf.png?token=GHSAT0AAAAAAB62DRICRO6KGN3WPCSU5S34Y7NFWXA';\r\n  console.log('channelData: ', channelData, typeof channelData);\r\n  const onCreateWorkspace = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newWorkspace || !newWorkspace.trim()) return;\r\n      if (!newUrl || !newUrl.trim()) return;\r\n      axios\r\n        .post(\r\n          '/api/workspaces',\r\n          {\r\n            workspace: newWorkspace,\r\n            url: newUrl,\r\n          },\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        )\r\n        .then((response) => {\r\n          console.log('modalData :', response);\r\n          mutate();\r\n\r\n          setShowCreateWorkspaceModal(false);\r\n          setNewWorkpsace('');\r\n          setNewUrl('');\r\n          console.log('data check CreateWS: ', UserData);\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newWorkspace, newUrl],\r\n  );\r\n\r\n  // if (!data) {\r\n  //   console.log('data check back to login: ', data);\r\n  //   return <Redirect to=\"/login\" />;\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <span onClick={onClickUserProfile}>\r\n          <ProfileImg src={leaf} alt=\"fail to load profile\" />\r\n          {showUserMenu && (\r\n            <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onClickUserProfile}>\r\n              <ProfileModal>\r\n                <img src={leaf} />\r\n                <div>\r\n                  <span id=\"profile-name\">{UserData ? UserData.nickname : 'false'}</span>\r\n                  <span id=\"profile-active\">Active</span>\r\n                </div>\r\n              </ProfileModal>\r\n              <LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\r\n            </Menu>\r\n          )}\r\n        </span>\r\n      </Header>\r\n\r\n      <WorkspaceWrapper>\r\n        <Workspaces>\r\n          {UserData?.Workspaces?.map((ws) => {\r\n            return (\r\n              <Link key={ws.id} to={`/workspace/${ws.url}/channel/일반`}>\r\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\r\n              </Link>\r\n            );\r\n          })}\r\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\r\n        </Workspaces>\r\n        <Channels>\r\n          <WorkspaceName onClick={toggleWorkspaceModal}>\r\n            {/* {UserData?.Workspaces.find((v)=>{})} */}\r\n            sleact\r\n          </WorkspaceName>\r\n          <MenuScroll>\r\n            <Menu show={showWorkspacesModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\r\n              <WorkspaceModal>\r\n                <h2>Sleact</h2>\r\n                <button onClick={onClickAddChannel}>채널 만들기</button>\r\n                <button onClick={onLogout}>로그아웃</button>\r\n              </WorkspaceModal>\r\n            </Menu>\r\n            <ChannelList />\r\n            <DMList />\r\n          </MenuScroll>\r\n        </Channels>\r\n        <Chats>\r\n          <Switch>\r\n            <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\r\n            <Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\r\n          </Switch>\r\n        </Chats>\r\n      </WorkspaceWrapper>\r\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\r\n        <form onSubmit={onCreateWorkspace}>\r\n          <Label id=\"workspace-label\">\r\n            <span>workspace 이름</span>\r\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace}></Input>\r\n          </Label>\r\n          <Label id=\"workspace-url-label\">\r\n            <span>workspace url</span>\r\n            <Input id=\"workspace\" value={newUrl} onChange={onChangeNewUrl}></Input>\r\n          </Label>\r\n          <Button type=\"submit\">생성하기</Button>\r\n        </form>\r\n      </Modal>\r\n      <CreateChannelModal\r\n        show={showCreateChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowCreateChannelModal={setShowCreateChannelModal}\r\n      ></CreateChannelModal>\r\n      <InviteWorkspaceModal\r\n        show={showCreateInviteWorkspace}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteWorkspaceModal={setShowInviteWorkspace}\r\n      />\r\n      <InviteChannelModal\r\n        show={showCreateInviteChannel}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteChannelModal={setShowInviteChannel}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Header = styled.header`\r\n  margin-bottom: 0.6rem;\r\n  text-align: center;\r\n  font-size: 1.125rem;\r\n  line-height: 1.75rem;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const Inlinediv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80vh;\r\n\r\n  height: 100vh;\r\n  padding: 24px;\r\n`;\r\nexport const WhiteBox = styled.div`\r\n  display: felx;\r\n  overflow: hidden\r\n  align-items: center;\r\n  justify-contents: center;\r\n  min-height: 250px;\r\n  min-width:300px;\r\n  width: 75%;\r\n  height: 40%;\r\n  background-color: white;\r\n  padding: 12px;\r\n  padding-left: 50px;\r\n  padding-right: 50px;\r\n  border-radius: 0.75rem;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  @media all and (min-width: 768px) {\r\n    .md\\:w-96 {\r\n      width: 384px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WhiteBox2 = styled.div`\r\n  display: felx;\r\n  overflow: hidden\r\n  align-items: center;\r\n  justify-contents: center;\r\n  min-height: 250px;\r\n  min-width:300px;\r\n  width: 100%;\r\n  height: 60%;\r\n  background-color: white;\r\n  padding: 12px;\r\n  padding-left: 50px;\r\n  padding-right: 50px;\r\n  border-radius: 0.75rem;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  @media all and (min-width: 768px) {\r\n    .md\\:w-96 {\r\n      width: 384px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LoginBtn = styled.button`\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  color: rgba(var(--sk_primary_foreground, 255, 255, 255), 1);\r\n  background-color: rgba(var(--sk_primary_background, 83, 83, 83), 1);\r\n  cursor: pointer;\r\n  border-radius: 15px;\r\n  padding: 5px;\r\n\r\n  font-family: 'Inter';\r\n  font-style: normal;\r\n  font-size: 15px;\r\n  &:focus {\r\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  margin-bottom: 16px;\r\n  & > span {\r\n    display: block;\r\n    text-align: left;\r\n    padding-bottom: 8px;\r\n    font-size: 15px;\r\n    cursor: pointer;\r\n    line-height: 1.46666667;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border-radius: 4px;\r\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\r\n  border: 1px solid var(--saf-0);\r\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\r\n  box-sizing: border-box;\r\n  margin: 0 0 20px;\r\n  width: 100%;\r\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\r\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\r\n  padding: 12px;\r\n  height: 44px;\r\n  padding-top: 11px;\r\n  padding-bottom: 13px;\r\n  font-size: 18px;\r\n  line-height: 1.33333333;\r\n  &:focus {\r\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  margin-bottom: 12px;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  color: #fff;\r\n  background-color: #4a154b;\r\n  border: none;\r\n  font-size: 18px;\r\n  font-weight: 900;\r\n  height: 44px;\r\n  min-width: 96px;\r\n  padding: 0 16px 3px;\r\n  transition: all 80ms linear;\r\n  user-select: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\r\n  &:hover {\r\n    background-color: rgba(74, 21, 75, 0.9);\r\n    border: none;\r\n  }\r\n  &:focus {\r\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\r\n  }\r\n`;\r\n\r\nexport const Error = styled.div`\r\n  color: #e01e5a;\r\n  margin: 8px 0 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Success = styled.div`\r\n  color: #2eb67d;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const LinkContainer = styled.p`\r\n  font-size: 13px;\r\n  color: #616061;\r\n  margin: 0 auto 8px;\r\n  width: 400px;\r\n  max-width: 400px;\r\n  & a {\r\n    color: #1264a3;\r\n    text-decoration: none;\r\n    font-weight: 700;\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\n\r\nconst fetcher = <Data,>(url: string): any => {\r\n  const A = axios\r\n    .get<Data>(url, {\r\n      withCredentials: true,\r\n    })\r\n    .then((response) => response.data);\r\n\r\n  return A;\r\n};\r\n\r\nexport default fetcher;\r\n"],"names":["CollapseButton","styled","collapse","show","onCloseModal","setShowInviteChannelModal","useInput","newMember","onChangeNewMember","setNewMember","useParams","workspace","channel","UserData","useSWR","fetcher","data","memberMutate","mutate","onInviteMember","useCallback","e","preventDefault","trim","axios","email","then","r","catch","error","console","dir","toast","response","position","onSubmit","id","type","value","onChange","CreateModal","CloseModalButton","children","stopPropagation","onClick","initialData","useState","setValue","target","CreateMenu","Menu","style","closeButton","defaultProps","Header","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","setShowCreateChannelModal","newChannel","onChangeNewChannel","setNewChannel","dedupingInterval","channelMutate","onCreateChannel","name","withCredentials","log","Modal","setShowInviteWorkspaceModal","userData","channelData","channelCollapse","setChannelCollapse","toggleChannelCollapse","prev","className","map","key","activeClassName","to","sockets","disconnect","io","transports","undefined","memberData","socket","useSocket","onlineList","setOnlineList","useEffect","on","off","member","isOnline","includes","nickname","Channel","loadable","DirectMessage","refreshInterval","showUserMenu","setShowUserMenu","showCreateWorkspaceModal","setShowCreateWorkspaceModal","showWorkspacesModal","setShowWorkspacesModal","showCreateChannelModal","showCreateInviteWorkspace","setShowInviteWorkspace","showCreateInviteChannel","setShowInviteChannel","newWorkspace","onChangeNewWorkspace","setNewWorkpsace","newUrl","onChangeNewUrl","setNewUrl","emit","channels","v","onClickUserProfile","onClickCreateWorkspace","onLogout","alert","onClickAddChannel","toggleWorkspaceModal","onCreateWorkspace","url","src","leaf","alt","right","top","ws","slice","toUpperCase","left","path","component","InviteChannelModal","Inlinediv","WhiteBox","WhiteBox2","LoginBtn","Label","Input","Button"],"sourceRoot":""}