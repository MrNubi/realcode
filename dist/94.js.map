{"version":3,"file":"94.js","mappings":"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","sources":["webpack://sleact-ts-front/./components/ChatBox/styles.tsx","webpack://sleact-ts-front/./components/ChatBox/index.tsx","webpack://sleact-ts-front/./components/ChatList/styles.tsx","webpack://sleact-ts-front/./components/ChatList/index.tsx","webpack://sleact-ts-front/./pages/DirectMessage/styles.tsx","webpack://sleact-ts-front/./pages/DirectMessage/index.tsx","webpack://sleact-ts-front/./utills/fetcherMemoLocal.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { MentionsInput } from 'react-mentions';\r\n\r\nexport const ChatArea = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px;\r\n  padding-top: 0;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  color: rgb(29, 28, 29);\r\n  font-size: 15px;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  border: 1px solid rgb(29, 28, 29);\r\n`;\r\n\r\nexport const MentionsTextarea = styled.textarea`\r\n  font-family: Slack-Lato, appleLogo, sans-serif;\r\n  font-size: 15px;\r\n  padding: 8px 9px;\r\n  width: 100%;\r\n  height: 80%;\r\n\r\n  & strong {\r\n    background: skyblue;\r\n  }\r\n  & textarea {\r\n    height: 44px;\r\n    padding: 9px 10px !important;\r\n    outline: none !important;\r\n    border-radius: 4px !important;\r\n    resize: none !important;\r\n    line-height: 22px;\r\n    border: none;\r\n    overflow: scroll;\r\n  }\r\n  & ul {\r\n    border: 1px solid lightgray;\r\n    max-height: 200px;\r\n    overflow-y: auto;\r\n    padding: 9px 10px;\r\n    background: white;\r\n    border-radius: 4px;\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nexport const Toolbox = styled.div`\r\n  position: relative;\r\n  background: rgb(248, 248, 248);\r\n  height: 41px;\r\n  display: flex;\r\n  border-top: 1px solid rgb(221, 221, 221);\r\n  align-items: center;\r\n  border-bottom-left-radius: 4px;\r\n  border-bottom-right-radius: 4px;\r\n`;\r\n\r\nexport const SendButton = styled.button`\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 5px;\r\n`;\r\nexport const FileButton = styled.input`\r\ncolor:white;\r\n::file-selector-button {\r\n  width: 150px;\r\n  height: 30px;\r\n  background: #fff;\r\n  border: 1px solid rgb(77,77,77);\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: rgb(77,77,77);\r\n    color: #fff;\r\n  }\r\n \r\n\r\n  position: absolute;\r\n  left: 5px;\r\n  top: 5px;\r\n  \r\n`;\r\n\r\nexport const EachMention = styled.button<{ focus: boolean }>`\r\n  padding: 4px 20px;\r\n  background: transparent;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  color: rgb(28, 29, 28);\r\n  width: 100%;\r\n  & img {\r\n    margin-right: 5px;\r\n  }\r\n  ${({ focus }) =>\r\n    focus &&\r\n    `\r\n    background: #1264a3;\r\n    color: white;\r\n  `};\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport autosize from 'autosize';\r\nimport React, { useCallback, useEffect, useRef, VFC } from 'react';\r\nimport { ChatArea, FileButton, Form, MentionsTextarea, SendButton, Toolbox } from './styles';\r\nimport { MGroupDataMemo, MLogin } from '@typings/memot';\r\nimport useSWR from 'swr';\r\nimport fetcherMemoLocal from '../../utills/fetcherMemoLocal';\r\n\r\ninterface Props {\r\n  chat: string;\r\n  onSubmitForm: (e: any) => void;\r\n  onChangeChat: (e: any) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nconst ChatBox: VFC<Props> = ({ chat, onSubmitForm, onChangeChat, placeholder }) => {\r\n  const memoUrl = 'https://memolucky.run.goorm.io';\r\n  const { data: tockenData, mutate: tockenMutate } = useSWR<MLogin>('tocken', fetcherMemoLocal);\r\n\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  const onKeydownChat = useCallback(\r\n    (e) => {\r\n      if (e.key === 'Enter') {\r\n        if (!e.shiftKey) {\r\n          e.preventDefault();\r\n          onSubmitForm(e);\r\n        }\r\n      }\r\n    },\r\n    [onSubmitForm],\r\n  );\r\n\r\n  return (\r\n    <ChatArea>\r\n      <Form onSubmit={onSubmitForm}>\r\n        <MentionsTextarea\r\n          placeholder={placeholder ? placeholder : 'Input Your Message!'}\r\n          value={chat}\r\n          onChange={onChangeChat}\r\n          onKeyDown={onKeydownChat}\r\n          ref={textareaRef}\r\n        />\r\n\r\n        <Toolbox>\r\n          <FileButton type=\"file\"></FileButton>\r\n          <SendButton\r\n            className={\r\n              'c-button-unstyled c-icon_button c-icon_button--light c-icon_button--size_medium c-texty_input__button c-texty_input__button--send' +\r\n              (chat?.trim() ? '' : ' c-texty_input__button--disabled')\r\n            }\r\n            data-qa=\"texty_send_button\"\r\n            aria-label=\"Send message\"\r\n            data-sk=\"tooltip_parent\"\r\n            type=\"submit\"\r\n            disabled={!chat?.trim()}\r\n          >\r\n            <i className=\"c-icon c-icon--paperplane-filled\" aria-hidden=\"true\" />\r\n          </SendButton>\r\n        </Toolbox>\r\n      </Form>\r\n    </ChatArea>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ChatZone = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  flex: 1;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  margin-top: 20px;\r\n  border-top: 1px solid #eee;\r\n`;\r\n\r\nexport const StickyHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex: 1;\r\n  width: 100%;\r\n  position: sticky;\r\n  top: 14px;\r\n  & button {\r\n    font-weight: bold;\r\n    font-size: 13px;\r\n    height: 28px;\r\n    line-height: 27px;\r\n    padding: 0 16px;\r\n    z-index: 2;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 1px 3px 0 rgba(0, 0, 0, 0.08);\r\n    border-radius: 24px;\r\n    position: relative;\r\n    top: -13px;\r\n    background: white;\r\n    border: none;\r\n    outline: none;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { ChatZone, Section } from './styles';\r\n\r\nconst ChatList = () => {\r\n  return (\r\n    <ChatZone>\r\n      <Section>section</Section>\r\n    </ChatZone>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  height: calc(100vh - 38px);\r\n  flex-flow: column;\r\n  position: relative;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 64px;\r\n  display: flex;\r\n  width: 100%;\r\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n  box-shadow: 0 1px 0 var(--saf-0);\r\n  padding: 20px 16px 20px 20px;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  & img {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nexport const DragOver = styled.div`\r\n  position: absolute;\r\n  top: 64px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: calc(100% - 64px);\r\n  background: white;\r\n  opacity: 0.7;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 40px;\r\n`;\r\n","import ChatBox from '@components/ChatBox';\r\nimport ChatList from '@components/ChatList';\r\nimport useInput from '@hooks/useInput';\r\nimport { IDM, IUser } from '@typings/db';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport useSWR from 'swr';\r\nimport fetcher from '../../utills/fetcher';\r\nimport { Container, Header } from './styles';\r\nimport autosize from 'autosize';\r\nimport axios from 'axios';\r\n\r\nconst DirectMessage = () => {\r\n  const { workspace, id } = useParams<{ workspace: string; id: string }>();\r\n  const { data: myData } = useSWR('/api/users', fetcher);\r\n  const { data: memberData } = useSWR<IUser>(`/api/workspaces/${workspace}/users/${id}`, fetcher);\r\n  const [chat, onChangeChat, setChat] = useInput('');\r\n  const { data: chatData, mutate: mutateChat } = useSWR<IDM[]>(\r\n    `/api/workspaces/${workspace}/dms/${id}/chats?perPage=20&page=1`,\r\n    fetcher,\r\n  );\r\n\r\n  const onSubmitForm = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (chat?.trim()) {\r\n        axios\r\n          .post(`/api/workspaces/${workspace}/dms/${id}/chats`, {\r\n            content: chat,\r\n          })\r\n          .then((r) => {\r\n            console.log('r.succes', r);\r\n            mutateChat(r.data);\r\n            setChat('');\r\n          })\r\n          .catch(console.error);\r\n      }\r\n    },\r\n    [chat],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <img\r\n          height={20}\r\n          width={20}\r\n          src=\"https://search.pstatic.net/sunny/?src=https%3A%2F%2Fcdn-icons.flaticon.com%2Fpng%2F512%2F5580%2Fpremium%2F5580909.png%3Ftoken%3Dexp%3D1637875670%7Ehmac%3D6300bc79cbb88dc219c822fcdfb1f495&type=a340\"\r\n          alt=\"상대 프로필: 지금은 못만들었음\"\r\n        />\r\n        {`${memberData?.nickname}님 과의 대화`}\r\n      </Header>\r\n      <ChatList />\r\n      <ChatBox chat={chat} onChangeChat={onChangeChat} onSubmitForm={onSubmitForm} />\r\n    </Container>\r\n  );\r\n};\r\nexport default DirectMessage;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\n\r\nconst fetcherMemoLocal = <Data,>(): any => {\r\n  let tocken = sessionStorage.getItem('tocken');\r\n  if (!tocken) {\r\n    console.log('fetcherMemoLocal : non-tocken', tocken);\r\n    return 'non-tocken';\r\n  }\r\n  console.log('fetcherMemoLocal : tocken', tocken);\r\n  return tocken;\r\n};\r\n\r\nexport default fetcherMemoLocal;\r\n"],"names":["ChatArea","styled","Form","MentionsTextarea","Toolbox","SendButton","FileButton","focus","chat","onSubmitForm","onChangeChat","placeholder","useSWR","fetcherMemoLocal","textareaRef","data","mutate","useRef","onKeydownChat","useCallback","e","key","shiftKey","preventDefault","onSubmit","value","onChange","onKeyDown","ref","type","className","trim","disabled","ChatZone","Section","Container","Header","useParams","workspace","id","memberData","fetcher","useInput","setChat","mutateChat","axios","content","then","r","console","log","catch","error","height","width","src","alt","nickname","ChatList","ChatBox","tocken","sessionStorage","getItem"],"sourceRoot":""}